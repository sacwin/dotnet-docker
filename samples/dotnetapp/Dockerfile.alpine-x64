FROM mcr.microsoft.com/dotnet/core/sdk:2.2-alpine AS build

################################################################
# Install tools from the alpine package registry that might be
# needed while running jenkins tasks.
################################################################
RUN \
  apk add --no-cache wget ca-certificates openssl icu-libs curl bash dotnet-sdk; \
  mkdir -p /root/core

################################################################
# Install EMC root certificates into certificate stores.
################################################################
COPY Certificates /root/certificates
RUN \
  cd /root/certificates; \
  find . -type f -name '*.cer' \
    -exec cp {} /usr/local/share/ca-certificates/$(basename '{}' .cer).crt ';' \
    -exec keytool -import -trustcacerts -file '{}' -keystore "/etc/ssl/certs/java/cacerts" -storepass changeit -noprompt -alias "$(basename '{}' .cer)" ';'; \
  update-ca-certificates

WORKDIR /app/
# copy csproj and restore as distinct layers
COPY dotnetapp/*.csproj ./dotnetapp/
COPY utils/*.csproj ./utils/
WORKDIR /app/dotnetapp
RUN dotnet restore

# copy and publish app and libraries
WORKDIR /app/
COPY dotnetapp/. ./dotnetapp/
COPY utils/. ./utils/
WORKDIR /app/dotnetapp
RUN dotnet publish -c Release -o out


# test application -- see: dotnet-docker-unit-testing.md
FROM build AS testrunner
WORKDIR /app/tests
COPY tests/. .
ENTRYPOINT ["dotnet", "test", "--logger:trx"]


FROM mcr.microsoft.com/dotnet/core/runtime:2.2-alpine AS runtime
WORKDIR /app
COPY --from=build /app/dotnetapp/out ./
ENTRYPOINT ["dotnet", "dotnetapp.dll"]
